{"version":3,"sources":["apps/AddProduct.js","apps/ProductDetails.js","apps/AppConfig.js","apps/EditProduct.js","apps/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["AddProduct","props","onClose","e","handleClose","initialState","ProductName","CategoryId","SkuId","Price","state","checked","selectedAttrs","handleChange","bind","handleSubmit","event","name","target","value","this","setState","preventDefault","onFormSubmit","showAdd","className","onSubmit","data-link","type","id","onChange","placeholder","categories","map","cat","Id","CategoryName","skus","sku","SkuName","colSpan","onClick","Component","ProductDetails","showProductDetails","disabled","attributesData","attr","ProductAttributeValueId","Selected","AttributeName","axios","create","baseURL","withCredentials","headers","EditProduct","handleCheckboxChange","newArray","Attributes","includes","filter","componentDidUpdate","console","log","ProductId","productData","showEdit","defaultValue","attributes","AttributeValue","_","require","Nav","products","selectedCategoryId","error","response","isAddProduct","isEditProduct","onSelectCategory","showAddModal","showEditModal","hideModal","editProduct","deleteProductDialog","productDetails","loadData","http","get","then","data","result","dialog","show","body","actions","Dialog","CancelAction","OKAction","put","post","delete","prod","defaultCategory","first","selectedCategory","find","i","ref","component","CategoryFilter","links","ProductList","count","currentProducts","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA+BRC,QAAU,SAACC,GACT,EAAKF,MAAMG,aAAe,EAAKH,MAAMG,YAAYD,IA9BjD,EAAKE,aAAe,CAClBC,YAAa,GACbC,WAAY,GACZC,MAAO,GACPC,MAAO,IAGT,EAAKC,MAAQ,EAAKL,aAClB,EAAKK,MAAQ,CAAEC,SAAS,EAAOC,cAAe,IAC9C,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAbH,E,gDAgBnB,SAAaE,GACX,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAE3BC,KAAKC,SAAL,eACGJ,EAAOE,M,+BAGZ,c,0BAEA,SAAaH,GACXA,EAAMM,iBACNF,KAAKnB,MAAMsB,aAAaH,KAAKV,OAC7BU,KAAKC,SAASD,KAAKf,gB,oBAMrB,WAEE,OAAKe,KAAKnB,MAAMuB,QAKd,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,oBAAIA,UAAU,YAAd,2BAEF,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAMC,SAAUN,KAAKL,aAArB,SACE,uBACEU,UAAU,4DACVE,YAAU,MAFZ,SAIE,kCACE,+BACE,oBAAIF,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,4BAEF,oBAAIA,UAAU,eAAd,SACE,uBACEG,KAAK,OACLX,KAAK,cACLY,GAAG,cACHC,SAAUV,KAAKP,aACfkB,YAAY,eACZN,UAAU,eACVN,MAAOC,KAAKV,MAAMJ,aAAe,UAIvC,+BACE,oBAAImB,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,wBAEF,oBAAIA,UAAU,eAAd,SACE,yBACEI,GAAG,aACHZ,KAAK,aACLQ,UAAU,eACVK,SAAUV,KAAKP,aACfM,MAAOC,KAAKV,MAAMH,YAAc,GALlC,UAOE,wBAAQY,MAAM,GAAd,4BACCC,KAAKnB,MAAM+B,WAAWC,KAAI,SAACC,GAAD,OACzB,wBAAqBf,MAAOe,EAAIC,GAAhC,SACGD,EAAIE,cADMF,EAAIC,eAOzB,+BACE,oBAAIV,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,mBAEF,oBAAIA,UAAU,eAAd,SACE,yBACEI,GAAG,QACHZ,KAAK,QACLQ,UAAU,eACVK,SAAUV,KAAKP,aACfM,MAAOC,KAAKV,MAAMF,OAAS,GAL7B,UAOE,wBAAQW,MAAM,GAAd,4BACCC,KAAKnB,MAAMoC,KAAKJ,KAAI,SAACK,GAAD,OACnB,wBAAqBnB,MAAOmB,EAAIH,GAAhC,SACGG,EAAIC,SADMD,EAAIH,eAOzB,+BACE,oBAAIV,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,qBAEF,oBAAIA,UAAU,eAAd,SACE,uBACEG,KAAK,OACLX,KAAK,QACLY,GAAG,QACHJ,UAAU,eACVK,SAAUV,KAAKP,aACfkB,YAAY,QACZZ,MAAOC,KAAKV,MAAMD,OAAS,UAIjC,6BACE,qBAAI+B,QAAQ,IAAZ,UACE,wBACEf,UAAU,uCACVG,KAAK,SAFP,yBAMA,wBACEH,UAAU,wBACVgB,QAASrB,KAAKlB,QAFhB,qCAchB,qBAAKuB,UAAU,oBAlHZ,S,GAvC2BiB,aCEnBC,E,4MAEnBzC,QAAU,SAACC,GACT,EAAKF,MAAMG,aAAe,EAAKH,MAAMG,YAAYD,I,4CAEnD,WAEE,OAAKiB,KAAKnB,MAAM2C,mBAKd,qBAAKnB,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,oBAAIA,UAAU,YAAd,+BAEF,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,uBACEA,UAAU,4DACVE,YAAU,MAFZ,SAIE,kCACE,+BACE,oBAAIF,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,4BAEF,oBAAIA,UAAU,eAAd,SACE,uBACEG,KAAK,OACLX,KAAK,cACLY,GAAG,cACHE,YAAY,eACZN,UAAU,eACVN,MAAOC,KAAKnB,MAAMK,aAAe,GACjCuC,UAAQ,SAId,+BACE,oBAAIpB,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,wBAEF,oBAAIA,UAAU,eAAd,SACE,uBACEG,KAAK,OACLX,KAAK,eACLY,GAAG,eACHE,YAAY,gBACZN,UAAU,eACVN,MAAOC,KAAKnB,MAAMmC,cAAgB,GAClCS,UAAQ,SAId,+BACE,oBAAIpB,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,mBAEF,oBAAIA,UAAU,eAAd,SACE,uBACEG,KAAK,OACLX,KAAK,UACLY,GAAG,UACHE,YAAY,WACZN,UAAU,eACVN,MAAOC,KAAKnB,MAAMsC,SAAW,GAC7BM,UAAQ,SAId,+BACE,oBAAIpB,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,qBAEF,oBAAIA,UAAU,eAAd,SACE,uBACEG,KAAK,OACLX,KAAK,QACLY,GAAG,QACHE,YAAY,QACZN,UAAU,eACVN,MAAOC,KAAKnB,MAAMQ,OAAS,GAC3BoC,UAAQ,SAId,6BACE,oBAAIL,QAAQ,IAAZ,SACE,2BAAUf,UAAU,aAApB,UACE,wBAAQA,UAAU,SAAlB,gCAECL,KAAKnB,MAAM6C,eAAeb,KAAI,SAACc,GAAD,OAC7B,gCACE,uBACEnB,KAAK,WACLX,KAAM8B,EAAKC,wBACXnB,GAAIkB,EAAKC,wBACT7B,MAAO4B,EAAKC,wBACZrC,QAASoC,EAAKE,SACdJ,UAAQ,IAPZ,OAUGE,EAAKG,gBAVEH,EAAKC,mCAgBvB,6BACE,oBAAIR,QAAQ,IAAZ,SACE,wBACEf,UAAU,sCACVgB,QAASrB,KAAKlB,QAFhB,kCAad,qBAAKuB,UAAU,oBAtHZ,S,GAR+BiB,a,QCF7BS,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0BACTC,iBAAiB,EACjBC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,oCAChC,+BAAgC,wC,QCPfC,E,kDACnB,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IAwCRwD,qBAAuB,SAACzC,GAAW,IAAD,EAC5B0C,EAAQ,sBAAO,EAAKhD,MAAMiD,YAAlB,CAA8B3C,EAAME,OAAOW,KACnDb,EAAME,OAAOP,SACX,EAAKD,MAAMiD,WAAWC,SAAS5C,EAAME,OAAOW,MAC9C6B,EAAWA,EAASG,QAAO,SAACd,GAAD,OAAUA,IAAS/B,EAAME,OAAOW,OAE7D,EAAKR,SAAS,CACZsC,WAAYD,IAEd,EAAKI,uBAELJ,EAAWA,EAASG,QAAO,SAACd,GAAD,OAAUA,IAAS/B,EAAME,OAAOW,MAC3D,EAAKR,SAAS,CACZsC,WAAYD,IAEd,EAAKI,uBAGP,EAAAC,SAAQC,IAAR,oBAAe,EAAKtD,MAAMiD,cA3DT,EA8DnBzD,QAAU,SAACC,GACT,EAAKF,MAAMG,aAAe,EAAKH,MAAMG,YAAYD,IA5DjD,EAAKE,aAAe,CAClB4D,UAAW,GACX3D,YAAa,GACbC,WAAY,GACZC,MAAO,GACPC,MAAO,IAGT,EAAKC,MAAQ,EAAKL,aAClB,EAAKK,MAAQ,CACXC,SAAS,EACTgD,WAAY,GACZxB,GAAI,EAAKlC,MAAMiE,YAAYD,WAG7B,EAAKpD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAK2C,qBAAuB,EAAKA,qBAAqB3C,KAA1B,gBApBX,E,qDAsBnB,c,gCACA,c,0BAEA,SAAaE,GAAQ,IAAD,EACZC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAE3BC,KAAKC,UAAL,mBACGJ,EAAOE,GADV,mBAEMC,KAAKnB,MAAMiE,YAAYD,WAF7B,M,0BAMF,SAAajD,GACXA,EAAMM,iBACNF,KAAKnB,MAAMsB,aAAaH,KAAKV,OAC7BU,KAAKC,SAASD,KAAKf,gB,oBA4BrB,WAAU,IAAD,OAEP,OAAKe,KAAKnB,MAAMkE,SAId,qBAAK1C,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,oBAAIA,UAAU,YAAd,4BAEF,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAMC,SAAUN,KAAKL,aAArB,SACE,uBACEU,UAAU,4DACVE,YAAU,MAFZ,SAIE,kCACE,+BACE,oBAAIF,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,4BAEF,oBAAIA,UAAU,eAAd,SACE,uBACEG,KAAK,OACLX,KAAK,cACLY,GAAG,cACHC,SAAUV,KAAKP,aACfkB,YAAY,eACZN,UAAU,eACV2C,aACEhD,KAAKnB,MAAMiE,YAAY5D,aAAe,UAK9C,+BACE,oBAAImB,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,wBAEF,oBAAIA,UAAU,eAAd,SACE,yBACEI,GAAG,aACHZ,KAAK,aACLQ,UAAU,eACVK,SAAUV,KAAKP,aACfuD,aACEhD,KAAKnB,MAAMiE,YAAY3D,YAAc,GANzC,UASE,wBAAQY,MAAM,GAAd,4BACCC,KAAKnB,MAAM+B,WAAWC,KAAI,SAACC,GAAD,OACzB,wBAAqBf,MAAOe,EAAIC,GAAhC,SACGD,EAAIE,cADMF,EAAIC,eAOzB,+BACE,oBAAIV,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,mBAEF,oBAAIA,UAAU,eAAd,SACE,yBACEI,GAAG,QACHZ,KAAK,QACLQ,UAAU,eACVK,SAAUV,KAAKP,aACfuD,aAAchD,KAAKnB,MAAMiE,YAAY1D,OAAS,GALhD,UAOE,wBAAQW,MAAM,GAAd,4BACCC,KAAKnB,MAAMoC,KAAKJ,KAAI,SAACK,GAAD,OACnB,wBAAqBnB,MAAOmB,EAAIH,GAAhC,SACGG,EAAIC,SADMD,EAAIH,eAOzB,+BACE,oBAAIV,UAAU,gCAAd,SACE,uBAAOA,UAAU,gBAAjB,qBAEF,qBAAIA,UAAU,eAAd,UACE,uBACEG,KAAK,OACLX,KAAK,QACLY,GAAG,QACHJ,UAAU,eACVK,SAAUV,KAAKP,aACfkB,YAAY,QACZqC,aAAchD,KAAKnB,MAAMiE,YAAYzD,OAAS,KAEhD,uBACEmB,KAAK,SACLX,KAAK,KACLY,GAAG,KACHuC,aACEhD,KAAKnB,MAAMiE,YAAYD,WAAa,GAEtCnC,SAAUV,KAAKP,eAEjB,uBACEe,KAAK,SACLX,KAAK,aACLY,GAAG,aACHV,MAAOC,KAAKV,MAAMiD,YAAc,GAChC7B,SAAUV,KAAKP,qBAIrB,6BACE,oBACE2B,QAAQ,IACRf,UAAU,gCAFZ,SAIE,2BAAUA,UAAU,aAApB,UACE,wBAAQA,UAAU,SAAlB,gCAGCL,KAAKnB,MAAMoE,WAAWpC,KAAI,SAACc,GAAD,OACzB,gCACE,uBACEnB,KAAK,WACLX,KAAM8B,EAAKZ,GACXN,GAAIkB,EAAKZ,GACTL,SAAU,EAAK2B,uBALnB,OAQGV,EAAKuB,iBAREvB,EAAKZ,cAevB,6BACE,qBAAIK,QAAQ,IAAZ,UACE,wBACEf,UAAU,uCACVG,KAAK,SAFP,4BAMA,wBACEH,UAAU,wBACVgB,QAASrB,KAAKlB,QAFhB,qCAchB,qBAAKuB,UAAU,oBA9JZ,S,GAtE4BiB,a,gBCMnC6B,EAAIC,EAAQ,IAMZC,E,kDACJ,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,MAAQ,CACXsB,WAAY,GACZ0C,SAAU,GACVrC,KAAM,GACNgC,WAAY,GACZM,mBAAoB,KACpBR,UAAU,EACV3C,SAAS,EACToB,oBAAoB,EACpBgC,MAAO,KACPC,SAAU,GACVX,YAAa,GACbpB,eAAgB,GAChBgC,cAAc,EACdC,eAAe,GAGjB,EAAKxD,aAAe,EAAKA,aAAaT,KAAlB,gBACpB,EAAKkE,iBAAmB,EAAKA,iBAAiBlE,KAAtB,gBACxB,EAAKmE,aAAe,EAAKA,aAAanE,KAAlB,gBACpB,EAAKoE,cAAgB,EAAKA,cAAcpE,KAAnB,gBACrB,EAAKqE,UAAY,EAAKA,UAAUrE,KAAf,gBACjB,EAAKsE,YAAc,EAAKA,YAAYtE,KAAjB,gBACnB,EAAKuE,oBAAsB,EAAKA,oBAAoBvE,KAAzB,gBAC3B,EAAKwE,eAAiB,EAAKA,eAAexE,KAApB,gBACtB,EAAKyE,SAAW,EAAKA,SAASzE,KAAd,gBA5BC,E,4CA+BnB,WAAY,IAAD,OAET0E,EACGC,IAxCqB,sBAyCrBC,MAAK,SAACb,GAAD,OAAcA,EAASc,QAC5BD,MACC,SAACE,GACC,EAAKvE,SAAS,CACZW,WAAY4D,OAGhB,SAAChB,GACC,EAAKvD,SAAS,CAAEuD,aAItBY,EACGC,IArDmB,aAsDnBC,MAAK,SAACb,GAAD,OAAcA,EAASc,QAC5BD,MACC,SAACE,GACC,EAAKvE,SAAS,CACZqD,SAAUkB,OAGd,SAAChB,GACC,EAAKvD,SAAS,CAAEuD,aAItBY,EACGC,IAlEc,QAmEdC,MAAK,SAACb,GAAD,OAAcA,EAASc,QAC5BD,MACC,SAACE,GACC,EAAKvE,SAAS,CACZgB,KAAMuD,OAGV,SAAChB,GACC,EAAKvD,SAAS,CAAEuD,aAItBY,EACGC,IA/EqB,sBAgFrBC,MAAK,SAACb,GAAD,OAAcA,EAASc,QAC5BD,MACC,SAACE,GACC,EAAKvE,SAAS,CACZgD,WAAYuB,OAGhB,SAAChB,GACC,EAAKvD,SAAS,CAAEuD,e,gCAIxB,WAEExD,KAAKmE,a,0BAGP,SAAaI,GAAO,IAAD,OACIvE,KAAKV,MAAlBgE,SAEJtD,KAAKV,MAAMqE,cAEb3D,KAAKyE,OAAOC,KAAK,CACfC,KAAM,gBACNC,QAAS,CACPC,IAAOC,cAAa,eACpBD,IAAOE,UAAS,WACd,EAAK9E,SAAS,CACZyD,cAAc,EACdC,eAAe,IAGjBS,EAAKY,IAAI,aAAeT,EAAKxD,GAAIwD,GAAMD,MAAK,SAACE,GAC3C,EAAKvE,SAAS,CACZwD,SAAUe,EACVd,cAAc,EACdC,eAAe,OAGnB,EAAKQ,iBAMXnE,KAAKyE,OAAOC,KAAK,CACfC,KAAM,eACNC,QAAS,CACPC,IAAOC,cAAa,eACpBD,IAAOE,UAAS,WACd,EAAK9E,SAAS,CACZyD,cAAc,EACdC,eAAe,IAEjBS,EAAKa,KAAK,YAAaV,GAAMD,MAAK,SAACE,GACjC,EAAKvE,SAAS,CACZwD,SAAUe,EACVd,cAAc,EACdC,eAAe,OAGnB,EAAKQ,mB,yBAOf,SAAYpD,GAAK,IAAD,OAEdqD,EACGC,IAAI,iBAAmBtD,GACvBuD,MAAK,SAACb,GAAD,OAAcA,EAASc,QAC5BD,MACC,SAACE,GACC,EAAKvE,SAAS,CACZ6C,YAAa0B,OAGjB,SAAChB,GACC,EAAKvD,SAAS,CAAEuD,e,8BAKxB,SAAiBzC,GACff,KAAKC,SAAS,CACZsD,mBAAoBxC,M,0BAIxB,WACEf,KAAKC,SAAS,CAAEG,SAAS,EAAMsD,cAAc,M,2BAG/C,SAAc3C,GACZf,KAAKC,SAAS,CACZ8C,UAAU,EACVY,eAAe,IAGjB3D,KAAKgE,YAAYjD,K,4BAGnB,SAAeA,GAAK,IAAD,OACjBf,KAAKC,SAAS,CACZuB,oBAAoB,IAGtB4C,EACGC,IAAI,mBAAqBtD,GACzBuD,MAAK,SAACb,GAAD,OAAcA,EAASc,QAC5BD,MACC,SAACE,GACC,EAAKvE,SAAS,CACZyB,eAAgB8C,OAGpB,SAAChB,GACC,EAAKvD,SAAS,CAAEuD,aAGtBxD,KAAKgE,YAAYjD,K,iCAGnB,SAAoBA,GAAK,IAAD,OACduC,EAAatD,KAAKV,MAAlBgE,SACRtD,KAAKyE,OAAOC,KAAK,CACfC,KAAM,kBACNC,QAAS,CACPC,IAAOC,cAAa,eACpBD,IAAOE,UAAS,WACdX,EAAKc,OAAO,aAAenE,GAAIuD,MAAK,SAACE,GACnC,EAAKvE,SAAS,CACZwD,SAAUe,EACVlB,SAAUA,EAASb,QAAO,SAAC0C,GAAD,OAAUA,EAAKtC,YAAc9B,kB,uBAQnE,WACEf,KAAKC,SAAS,CACZG,SAAS,EACT2C,UAAU,EACVvB,oBAAoB,M,oBAIxB,WAAU,IAAD,OACP,EAWIxB,KAAKV,MAVP2D,EADF,EACEA,WACAhC,EAFF,EAEEA,KACAL,EAHF,EAGEA,WACA0C,EAJF,EAIEA,SACAC,EALF,EAKEA,mBACAnD,EANF,EAMEA,QACA2C,EAPF,EAOEA,SACAD,EARF,EAQEA,YACApB,EATF,EASEA,eACAF,EAVF,EAUEA,mBAGI4D,EAAkBjC,EAAEkC,MAAMzE,GAE1B0E,EACJnC,EAAEoC,KAAK3E,GAAY,SAAC4E,GAAD,OAAOA,EAAEzE,KAAOwC,MAAuB6B,EAC5D,OACE,gCACE,qBAAK/E,UAAU,WACf,qBAAKA,UAAU,WACf,uBAEA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CACEO,WAAYA,EACZgD,iBAAkB5D,KAAK4D,qBAI3B,sBAAKvD,UAAU,WAAf,UACE,cAAC,EAAD,CACEiD,SAAUA,EACVgC,iBAAkBA,EAClBxB,cAAe9D,KAAK8D,cACpBG,oBAAqBjE,KAAKiE,oBAC1BC,eAAgBlE,KAAKkE,eACrBkB,gBAAiBA,IAGnB,cAAC,EAAD,CACEhF,QAASA,EACTpB,YAAagB,KAAK+D,UAClBnD,WAAYA,EACZK,KAAMA,EACNgC,WAAYA,EACZK,SAAUA,EACVnD,aAAcH,KAAKG,eAErB,cAAC,EAAD,CACE4C,SAAUA,EACV/D,YAAagB,KAAK+D,UAClBnD,WAAYA,EACZK,KAAMA,EACNgC,WAAYA,EACZK,SAAUA,EACVR,YAAaA,EACbpB,eAAgBA,EAChBvB,aAAcH,KAAKG,eAErB,cAAC,EAAD,CACEqB,mBAAoBA,EACpBxC,YAAagB,KAAK+D,UAClBjB,YAAaA,EACbpB,eAAgBA,IAGlB,cAAC,IAAD,CACE+D,IAAK,SAACC,GACJ,EAAKjB,OAASiB,KAGlB,wBACErF,UAAU,yBACVgB,QAASrB,KAAK6D,aAFhB,4BAOF,qBAAKxD,UAAU,YAAf,SACE,qBAAKA,UAAU,uB,GAvTTiB,aA+TdqE,EAAiB,SAAC,GAAsC,IAApC/E,EAAmC,EAAnCA,WAAYgD,EAAuB,EAAvBA,iBAC5BgC,EAAQhF,EAAWC,KAAI,SAAC2E,GAAD,OAC3B,gCACE,wBACEnF,UAAU,8BACVgB,QAAS,kBAAMuC,EAAiB4B,EAAEzE,KAFpC,SAIGyE,EAAExE,eAEL,yBAPQwE,EAAEzE,OAUd,OAAO,8BAAM6E,KAGXC,EAAc,SAAC,GAOZ,IANLvC,EAMI,EANJA,SACAgC,EAKI,EALJA,iBACAxB,EAII,EAJJA,cACAG,EAGI,EAHJA,oBACAC,EAEI,EAFJA,eACAkB,EACI,EADJA,gBAEIU,EAAQ,EAENC,EAAkBzC,EACrBb,QAAO,SAAC+C,GAAD,OAAOA,EAAErG,cAAgBmG,EAAiBvE,IAAMqE,EAAgBrE,OACvEF,KAAI,SAAC2E,GAAD,OACH,+BACE,6BAAKM,MACL,6BAAKN,EAAEtG,cACP,6BAAKsG,EAAExE,eACP,6BAAKwE,EAAErE,UACP,6BAAKqE,EAAEnG,QAEP,+BACE,wBACEgB,UAAU,2BACVgB,QAAS,kBAAMyC,EAAc0B,EAAE3C,YAFjC,kBADF,IAQE,wBACExC,UAAU,8BACVgB,QAAS,kBAAM6C,EAAesB,EAAE3C,YAFlC,qBARF,IAeE,wBACExC,UAAU,6BACVgB,QAAS,kBAAM4C,EAAoBuB,EAAE3C,YAFvC,yBAtBK2C,EAAE3C,cA+Bf,OACE,8BACE,uBAAOxC,UAAU,4DAAjB,SACE,kCACE,+BACE,uBACA,8CACA,+CACA,qCACA,uCAEA,0BAED0F,UAOI1C,ICtZA2C,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ecd4ffe.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Modal.css';\r\nexport default class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //set states\r\n    this.initialState = {\r\n      ProductName: '',\r\n      CategoryId: '',\r\n      SkuId: '',\r\n      Price: '',\r\n    };\r\n    //bind functions\r\n    this.state = this.initialState;\r\n    this.state = { checked: false, selectedAttrs: [] };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  //function to detect changes in input controls. if changed, then update state\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  componentDidMount() {}\r\n  //executes submit form for save and edit\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n  //closes modal forms\r\n  onClose = (e) => {\r\n    this.props.handleClose && this.props.handleClose(e);\r\n  };\r\n  render() {\r\n    //determines whether modal form(this component) is visible or not\r\n    if (!this.props.showAdd) {\r\n      return null;\r\n    }\r\n    //render this component\r\n    return (\r\n      <div className=\"mod\">\r\n        <div className=\"mod-content\">\r\n          <div className=\"mod-header\">\r\n            <h4 className=\"mod-title\">Add Product</h4>\r\n          </div>\r\n          <div className=\"mod-body\">\r\n            <div className=\"card bg-warning\">\r\n              <div className=\"table-responsive\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <table\r\n                    className=\"table table-striped table-sm table-success table-bordered\"\r\n                    data-link=\"row\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">Product Name</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"ProductName\"\r\n                            id=\"ProductName\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Product Name\"\r\n                            className=\"form-control\"\r\n                            value={this.state.ProductName || ''}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">Category</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <select\r\n                            id=\"CategoryId\"\r\n                            name=\"CategoryId\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.CategoryId || ''}\r\n                          >\r\n                            <option value=\"\">====Select====</option>\r\n                            {this.props.categories.map((cat) => (\r\n                              <option key={cat.Id} value={cat.Id}>\r\n                                {cat.CategoryName}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">SKU</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <select\r\n                            id=\"SkuId\"\r\n                            name=\"SkuId\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.SkuId || ''}\r\n                          >\r\n                            <option value=\"\">====Select====</option>\r\n                            {this.props.skus.map((sku) => (\r\n                              <option key={sku.Id} value={sku.Id}>\r\n                                {sku.SkuName}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">Price</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"Price\"\r\n                            id=\"Price\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Price\"\r\n                            value={this.state.Price || ''}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colSpan=\"2\">\r\n                          <button\r\n                            className=\"btn btn-sm btn-primary fa-pull-right\"\r\n                            type=\"submit\"\r\n                          >\r\n                            Add Product\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-sm btn-danger\"\r\n                            onClick={this.onClose}\r\n                          >\r\n                            Close\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mod-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Modal.css';\r\n\r\n//Product Details component\r\nexport default class ProductDetails extends Component {\r\n  //handles closing this component\r\n  onClose = (e) => {\r\n    this.props.handleClose && this.props.handleClose(e);\r\n  };\r\n  render() {\r\n    //decides whether component is hidden or visible\r\n    if (!this.props.showProductDetails) {\r\n      return null;\r\n    }\r\n    //render component\r\n    return (\r\n      <div className=\"mod\">\r\n        <div className=\"mod-content\">\r\n          <div className=\"mod-header\">\r\n            <h4 className=\"mod-title\">Product Details</h4>\r\n          </div>\r\n          <div className=\"mod-body\">\r\n            <div className=\"card bg-warning\">\r\n              <div className=\"table-responsive\">\r\n                <table\r\n                  className=\"table table-striped table-sm table-success table-bordered\"\r\n                  data-link=\"row\"\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"align-bottom font-weight-bold\">\r\n                        <label className=\"control-label\">Product Name</label>\r\n                      </td>\r\n                      <td className=\"align-bottom\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"ProductName\"\r\n                          id=\"ProductName\"\r\n                          placeholder=\"Product Name\"\r\n                          className=\"form-control\"\r\n                          value={this.props.ProductName || ''}\r\n                          disabled\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"align-bottom font-weight-bold\">\r\n                        <label className=\"control-label\">Category</label>\r\n                      </td>\r\n                      <td className=\"align-bottom\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"CategoryName\"\r\n                          id=\"CategoryName\"\r\n                          placeholder=\"Category Name\"\r\n                          className=\"form-control\"\r\n                          value={this.props.CategoryName || ''}\r\n                          disabled\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"align-bottom font-weight-bold\">\r\n                        <label className=\"control-label\">SKU</label>\r\n                      </td>\r\n                      <td className=\"align-bottom\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"SkuName\"\r\n                          id=\"SkuName\"\r\n                          placeholder=\"Sku Name\"\r\n                          className=\"form-control\"\r\n                          value={this.props.SkuName || ''}\r\n                          disabled\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"align-bottom font-weight-bold\">\r\n                        <label className=\"control-label\">Price</label>\r\n                      </td>\r\n                      <td className=\"align-bottom\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"Price\"\r\n                          id=\"Price\"\r\n                          placeholder=\"Price\"\r\n                          className=\"form-control\"\r\n                          value={this.props.Price || ''}\r\n                          disabled\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colSpan=\"2\">\r\n                        <fieldset className=\"border p-2\">\r\n                          <legend className=\"w-auto\">Product Attributes</legend>\r\n\r\n                          {this.props.attributesData.map((attr) => (\r\n                            <div key={attr.ProductAttributeValueId}>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name={attr.ProductAttributeValueId}\r\n                                id={attr.ProductAttributeValueId}\r\n                                value={attr.ProductAttributeValueId}\r\n                                checked={attr.Selected}\r\n                                disabled\r\n                              />\r\n                              &nbsp;\r\n                              {attr.AttributeName}\r\n                            </div>\r\n                          ))}\r\n                        </fieldset>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colSpan=\"2\">\r\n                        <button\r\n                          className=\"btn btn-sm btn-danger fa-pull-right\"\r\n                          onClick={this.onClose}\r\n                        >\r\n                          Close\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mod-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://localhost:44351',\r\n  withCredentials: false,\r\n  headers: {\r\n    'Content-type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n    'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n  },\r\n});\r\nexport const url = 'https://localhost:44351';\r\n","import React, { Component } from 'react';\r\nimport './Modal.css';\r\nexport default class EditProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //initial states\r\n    this.initialState = {\r\n      ProductId: '',\r\n      ProductName: '',\r\n      CategoryId: '',\r\n      SkuId: '',\r\n      Price: '',\r\n    };\r\n    //set states\r\n    this.state = this.initialState;\r\n    this.state = {\r\n      checked: false,\r\n      Attributes: [],\r\n      Id: this.props.productData.ProductId,\r\n    };\r\n    //bind control functions\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n  }\r\n  componentDidMount() {}\r\n  componentDidUpdate() {}\r\n  //checks changes in input controls and sets states for changes\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      Id: this.props.productData.ProductId,\r\n    });\r\n  }\r\n  //handles submit for save and edit\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n  //handles checkboxes inputs for attributes and sets their states(checked/unchecked)\r\n  handleCheckboxChange = (event) => {\r\n    let newArray = [...this.state.Attributes, event.target.id];\r\n    if (event.target.checked) {\r\n      if (this.state.Attributes.includes(event.target.id)) {\r\n        newArray = newArray.filter((attr) => attr !== event.target.id);\r\n      }\r\n      this.setState({\r\n        Attributes: newArray,\r\n      });\r\n      this.componentDidUpdate();\r\n    } else {\r\n      newArray = newArray.filter((attr) => attr !== event.target.id);\r\n      this.setState({\r\n        Attributes: newArray,\r\n      });\r\n      this.componentDidUpdate();\r\n    }\r\n\r\n    console.log(...this.state.Attributes);\r\n  };\r\n  //handles closing of this component\r\n  onClose = (e) => {\r\n    this.props.handleClose && this.props.handleClose(e);\r\n  };\r\n  //renders this component\r\n  render() {\r\n    //determines whether this component is visible or hidden\r\n    if (!this.props.showEdit) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"mod\">\r\n        <div className=\"mod-content\">\r\n          <div className=\"mod-header\">\r\n            <h4 className=\"mod-title\">Edit Product</h4>\r\n          </div>\r\n          <div className=\"mod-body\">\r\n            <div className=\"card bg-warning\">\r\n              <div className=\"table-responsive\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <table\r\n                    className=\"table table-striped table-sm table-success table-bordered\"\r\n                    data-link=\"row\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">Product Name</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"ProductName\"\r\n                            id=\"ProductName\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Product Name\"\r\n                            className=\"form-control\"\r\n                            defaultValue={\r\n                              this.props.productData.ProductName || ''\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">Category</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <select\r\n                            id=\"CategoryId\"\r\n                            name=\"CategoryId\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleChange}\r\n                            defaultValue={\r\n                              this.props.productData.CategoryId || ''\r\n                            }\r\n                          >\r\n                            <option value=\"\">====Select====</option>\r\n                            {this.props.categories.map((cat) => (\r\n                              <option key={cat.Id} value={cat.Id}>\r\n                                {cat.CategoryName}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">SKU</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <select\r\n                            id=\"SkuId\"\r\n                            name=\"SkuId\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.props.productData.SkuId || ''}\r\n                          >\r\n                            <option value=\"\">====Select====</option>\r\n                            {this.props.skus.map((sku) => (\r\n                              <option key={sku.Id} value={sku.Id}>\r\n                                {sku.SkuName}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"align-bottom font-weight-bold\">\r\n                          <label className=\"control-label\">Price</label>\r\n                        </td>\r\n                        <td className=\"align-bottom\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"Price\"\r\n                            id=\"Price\"\r\n                            className=\"form-control\"\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Price\"\r\n                            defaultValue={this.props.productData.Price || ''}\r\n                          />\r\n                          <input\r\n                            type=\"hidden\"\r\n                            name=\"Id\"\r\n                            id=\"Id\"\r\n                            defaultValue={\r\n                              this.props.productData.ProductId || ''\r\n                            }\r\n                            onChange={this.handleChange}\r\n                          />\r\n                          <input\r\n                            type=\"hidden\"\r\n                            name=\"Attributes\"\r\n                            id=\"Attributes\"\r\n                            value={this.state.Attributes || ''}\r\n                            onChange={this.handleChange}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td\r\n                          colSpan=\"2\"\r\n                          className=\"align-bottom font-weight-bold\"\r\n                        >\r\n                          <fieldset className=\"border p-2\">\r\n                            <legend className=\"w-auto\">\r\n                              Product Attributes\r\n                            </legend>\r\n                            {this.props.attributes.map((attr) => (\r\n                              <div key={attr.Id}>\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  name={attr.Id}\r\n                                  id={attr.Id}\r\n                                  onChange={this.handleCheckboxChange}\r\n                                />\r\n                                &nbsp;\r\n                                {attr.AttributeValue}\r\n                              </div>\r\n                            ))}\r\n                          </fieldset>\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <td colSpan=\"2\">\r\n                          <button\r\n                            className=\"btn btn-sm btn-primary fa-pull-right\"\r\n                            type=\"submit\"\r\n                          >\r\n                            Update Product\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-sm btn-danger\"\r\n                            onClick={this.onClose}\r\n                          >\r\n                            Close\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mod-footer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AddProduct from './AddProduct';\r\nimport ProductDetails from './ProductDetails';\r\nimport http from './AppConfig';\r\nimport EditProduct from './EditProduct';\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\n//declare api-end points to be used in the application\r\nconst _ = require('lodash');\r\nconst CATEGORIES_ENDPOINT = '/productCategories';\r\nconst PRODUCTS_ENDPOINT = '/products';\r\nconst SKU_ENDPOINT = '/sku';\r\nconst ATTRIBUTES_ENDPOINT = '/productAttributes';\r\n//this is the main parent component\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //set states\r\n    this.state = {\r\n      categories: [],\r\n      products: [],\r\n      skus: [],\r\n      attributes: [],\r\n      selectedCategoryId: null,\r\n      showEdit: false,\r\n      showAdd: false,\r\n      showProductDetails: false,\r\n      error: null,\r\n      response: {},\r\n      productData: {},\r\n      attributesData: [],\r\n      isAddProduct: false,\r\n      isEditProduct: false,\r\n    };\r\n    //bind functions\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onSelectCategory = this.onSelectCategory.bind(this);\r\n    this.showAddModal = this.showAddModal.bind(this);\r\n    this.showEditModal = this.showEditModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    this.editProduct = this.editProduct.bind(this);\r\n    this.deleteProductDialog = this.deleteProductDialog.bind(this);\r\n    this.productDetails = this.productDetails.bind(this);\r\n    this.loadData = this.loadData.bind(this);\r\n  }\r\n  //call backend api to load data\r\n  loadData() {\r\n    //load categories\r\n    http\r\n      .get(CATEGORIES_ENDPOINT)\r\n      .then((response) => response.data)\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            categories: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        },\r\n      );\r\n    //load products\r\n    http\r\n      .get(PRODUCTS_ENDPOINT)\r\n      .then((response) => response.data)\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            products: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        },\r\n      );\r\n    //load SKUs\r\n    http\r\n      .get(SKU_ENDPOINT)\r\n      .then((response) => response.data)\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            skus: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        },\r\n      );\r\n    //load attributes\r\n    http\r\n      .get(ATTRIBUTES_ENDPOINT)\r\n      .then((response) => response.data)\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            attributes: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        },\r\n      );\r\n  }\r\n  componentWillMount() {\r\n    //load data\r\n    this.loadData();\r\n  }\r\n  //handles data on submit for save and edit\r\n  onFormSubmit(data) {\r\n    const { products } = this.state;\r\n    //check if submit action is save or edit\r\n    if (this.state.isEditProduct) {\r\n      //edit action\r\n      this.dialog.show({\r\n        body: 'Edit product?',\r\n        actions: [\r\n          Dialog.CancelAction(() => {}),\r\n          Dialog.OKAction(() => {\r\n            this.setState({\r\n              isAddProduct: false,\r\n              isEditProduct: false,\r\n            });\r\n\r\n            http.put('/products/' + data.Id, data).then((result) => {\r\n              this.setState({\r\n                response: result,\r\n                isAddProduct: false,\r\n                isEditProduct: false,\r\n              });\r\n            });\r\n            this.loadData();\r\n          }),\r\n        ],\r\n      });\r\n    } else {\r\n      //add action\r\n      this.dialog.show({\r\n        body: 'Add product?',\r\n        actions: [\r\n          Dialog.CancelAction(() => {}),\r\n          Dialog.OKAction(() => {\r\n            this.setState({\r\n              isAddProduct: false,\r\n              isEditProduct: false,\r\n            });\r\n            http.post('/products', data).then((result) => {\r\n              this.setState({\r\n                response: result,\r\n                isAddProduct: false,\r\n                isEditProduct: false,\r\n              });\r\n            });\r\n            this.loadData();\r\n          }),\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  editProduct(Id) {\r\n    //prepopulate edit form\r\n    http\r\n      .get('/productsById/' + Id)\r\n      .then((response) => response.data)\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            productData: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        },\r\n      );\r\n  }\r\n  //loads categories on click\r\n  onSelectCategory(Id) {\r\n    this.setState({\r\n      selectedCategoryId: Id,\r\n    });\r\n  }\r\n  //loads add product form\r\n  showAddModal() {\r\n    this.setState({ showAdd: true, isAddProduct: true });\r\n  }\r\n  //loads product edit form\r\n  showEditModal(Id) {\r\n    this.setState({\r\n      showEdit: true,\r\n      isEditProduct: true,\r\n    });\r\n\r\n    this.editProduct(Id);\r\n  }\r\n  //loads product details form\r\n  productDetails(Id) {\r\n    this.setState({\r\n      showProductDetails: true,\r\n    });\r\n    //loads attributes\r\n    http\r\n      .get('/attributesData/' + Id)\r\n      .then((response) => response.data)\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            attributesData: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        },\r\n      );\r\n    this.editProduct(Id);\r\n  }\r\n  //deletes product\r\n  deleteProductDialog(Id) {\r\n    const { products } = this.state;\r\n    this.dialog.show({\r\n      body: 'Delete product?',\r\n      actions: [\r\n        Dialog.CancelAction(() => {}),\r\n        Dialog.OKAction(() => {\r\n          http.delete('/products/' + Id).then((result) => {\r\n            this.setState({\r\n              response: result,\r\n              products: products.filter((prod) => prod.ProductId !== Id),\r\n            });\r\n          });\r\n        }),\r\n      ],\r\n    });\r\n  }\r\n  //unloads/hides modal component\r\n  hideModal() {\r\n    this.setState({\r\n      showAdd: false,\r\n      showEdit: false,\r\n      showProductDetails: false,\r\n    });\r\n  }\r\n  //render this main component\r\n  render() {\r\n    const {\r\n      attributes,\r\n      skus,\r\n      categories,\r\n      products,\r\n      selectedCategoryId,\r\n      showAdd,\r\n      showEdit,\r\n      productData,\r\n      attributesData,\r\n      showProductDetails,\r\n    } = this.state;\r\n    //load first category if none is selected\r\n    const defaultCategory = _.first(categories);\r\n    //load selected category\r\n    const selectedCategory =\r\n      _.find(categories, (i) => i.Id === selectedCategoryId) || defaultCategory;\r\n    return (\r\n      <div>\r\n        <div className=\"header\"></div>\r\n        <div className=\"topnav\"></div>\r\n        <br />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-3\">\r\n            <CategoryFilter\r\n              categories={categories}\r\n              onSelectCategory={this.onSelectCategory}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-sm-9\">\r\n            <ProductList\r\n              products={products}\r\n              selectedCategory={selectedCategory}\r\n              showEditModal={this.showEditModal}\r\n              deleteProductDialog={this.deleteProductDialog}\r\n              productDetails={this.productDetails}\r\n              defaultCategory={defaultCategory}\r\n            />\r\n\r\n            <AddProduct\r\n              showAdd={showAdd}\r\n              handleClose={this.hideModal}\r\n              categories={categories}\r\n              skus={skus}\r\n              attributes={attributes}\r\n              products={products}\r\n              onFormSubmit={this.onFormSubmit}\r\n            ></AddProduct>\r\n            <EditProduct\r\n              showEdit={showEdit}\r\n              handleClose={this.hideModal}\r\n              categories={categories}\r\n              skus={skus}\r\n              attributes={attributes}\r\n              products={products}\r\n              productData={productData}\r\n              attributesData={attributesData}\r\n              onFormSubmit={this.onFormSubmit}\r\n            ></EditProduct>\r\n            <ProductDetails\r\n              showProductDetails={showProductDetails}\r\n              handleClose={this.hideModal}\r\n              productData={productData}\r\n              attributesData={attributesData}\r\n            ></ProductDetails>\r\n\r\n            <Dialog\r\n              ref={(component) => {\r\n                this.dialog = component;\r\n              }}\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={this.showAddModal}\r\n            >\r\n              Add Product\r\n            </button>\r\n          </div>\r\n          <div className=\"row:after\">\r\n            <div className=\"footer\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/**Category Component */\r\nvar CategoryFilter = ({ categories, onSelectCategory }) => {\r\n  const links = categories.map((i) => (\r\n    <div key={i.Id}>\r\n      <button\r\n        className=\"btn btn-secondary btn-block\"\r\n        onClick={() => onSelectCategory(i.Id)}\r\n      >\r\n        {i.CategoryName}\r\n      </button>\r\n      <br />\r\n    </div>\r\n  ));\r\n  return <div>{links}</div>;\r\n};\r\n/*** Product component */\r\nvar ProductList = ({\r\n  products,\r\n  selectedCategory,\r\n  showEditModal,\r\n  deleteProductDialog,\r\n  productDetails,\r\n  defaultCategory,\r\n}) => {\r\n  var count = 1;\r\n  //filter current products on selection of category\r\n  const currentProducts = products\r\n    .filter((i) => i.CategoryId === (selectedCategory.Id || defaultCategory.Id))\r\n    .map((i) => (\r\n      <tr key={i.ProductId}>\r\n        <td>{count++}</td>\r\n        <td>{i.ProductName}</td>\r\n        <td>{i.CategoryName}</td>\r\n        <td>{i.SkuName}</td>\r\n        <td>{i.Price}</td>\r\n\r\n        <td>\r\n          <button\r\n            className=\"btn btn-info py-0 btn-sm\"\r\n            onClick={() => showEditModal(i.ProductId)}\r\n          >\r\n            Edit\r\n          </button>\r\n          |\r\n          <button\r\n            className=\"btn btn-primary py-0 btn-sm\"\r\n            onClick={() => productDetails(i.ProductId)}\r\n          >\r\n            Details\r\n          </button>\r\n          |\r\n          <button\r\n            className=\"btn btn-danger py-0 btn-sm\"\r\n            onClick={() => deleteProductDialog(i.ProductId)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  return (\r\n    <div>\r\n      <table className=\"table table-striped table-sm table-success table-bordered\">\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>Product Name</th>\r\n            <th>Category Name</th>\r\n            <th>SKU</th>\r\n            <th>Price</th>\r\n\r\n            <th></th>\r\n          </tr>\r\n          {currentProducts}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import Nav from './apps/Nav';\n\nfunction App() {\n  return <Nav />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}